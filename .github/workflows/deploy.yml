name: CI/CD Deploy            # Nome del workflow

on:
  push:
    branches: [ main ]        # Questo workflow parte quando fai push su 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest    # Il runner GitHub usa un server Ubuntu per eseguire i comandi

    steps:
    - name: Checkout repository       # Primo passo: scarica il codice del progetto
      uses: actions/checkout@v3

    - name: Deploy to EC2 via SSH      # Secondo passo: connetti e fai deploy via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_IP }}       # Usa l’IP del server salvato nei secrets
        username: ${{ secrets.SERVER_USER }} # Usa l’utente SSH (es. ubuntu)
        key: ${{ secrets.SERVER_KEY }}       # Usa la chiave privata SSH salvata come secret
        script: |                            # Comandi da eseguire sul server EC2
          docker stop devops-app || true    # Ferma container vecchio (se esiste)
          docker rm devops-app || true      # Rimuovi container vecchio
          rm -rf ~/app || true               # Cancella vecchia app
          mkdir ~/app                       # Crea cartella nuova
          cd ~/app                         # Entra nella cartella
          git clone https://github.com/${{ github.repository }} .  # Clona la repo
          docker build -t devops-app .     # Costruisci l’immagine Docker
          docker run -d -p 8080:80 --name devops-app devops-app   # Avvia il container in background, esponendo porta 80

